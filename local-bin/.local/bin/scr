#!/bin/sh
OUTPUT_DIR=$HOME/Videos
BASE_FILENAME=$(date +%d-%m-%Y_%H-%M-%S) OUTPUT_EXT=mp4
OUTPUT_FULL="$OUTPUT_DIR/$BASE_FILENAME.$OUTPUT_EXT"
FRAMERATE=60
# separate multiple audio device/application with pipe |
AUDIO_DEVICES="default_output"
VIDEO_QUALITY=very_high
VIDEO_CODEC="av1"
AUDIO_CODEC="opus"
FRAMERATE_MODE="cfr"
BITRATE_MODE="qp"
LOCKFILE="/tmp/scr.lock"
pkill -f "gpu-screen-recorder" && exit
cleanup() {
	EXIT_CODE=$?
	if [ "$EXIT_CODE" -eq 0 ]; then
		sleep 0.1
		# the value in -r could be any number,
		# it's just so that only one notif appears
		# when the recording is started/stopped.
		notify-send \
			-a 'gpu-screen-recorder' \
			-t 3000 \
			-i stop \
			-e \
			-r 2 \
			"Recording stopped" \
			"saved at $OUTPUT_FULL"
	fi
}
trap cleanup EXIT 

exec 200>"$LOCKFILE"
if ! flock -xn 200 ; then
	exit 1
fi

notify-send \
	-a 'gpu-screen-recorder' \
	-t 500 \
	-i record \
	-e \
	-r 2 \
	"Recording..."
sleep 0.6
i=1
while [ -e "$OUTPUT_FULL" ]; do
	OUTPUT_FILENAME="$BASE_FILENAME_($i)"
	OUTPUT_FULL="$OUTPUT_DIR/$OUTPUT_FILENAME.$OUTPUT_EXT"
	i=$((i+1))
done
gpu-screen-recorder -w "screen" -f $FRAMERATE -a $AUDIO_DEVICES -q $VIDEO_QUALITY -k $VIDEO_CODEC -ac $AUDIO_CODEC -fm $FRAMERATE_MODE -bm $BITRATE_MODE -o $OUTPUT_FULL
